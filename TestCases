00010000000000000101100000000000 //mult
01000000000000000000000010001001 //lw..
00001000000000000000110010101011 //sub
00100000000000000000011111011110 //or..
01001000000000000000000010001001 //sw..
00101000000000000000011111010000 //and immediate
00000000000000000000110010101011 //add..
00011000000000000101100000000000 //add immed..
00110000000000000101100000000000 //shiftright
00111000000000000101100000000000 //shiftleft
01100000000000000101100000000000 //setlessthanimmediate
01010000000000000010000011001100 //beq..
01011000000011111111000011000000 //blessthan
01101000000000000000000000100000 //jump reg


---tests from the uni---

00011000000000000101100000000000 //addim reg8 = 5 immediate +value in reg0
01000000000000001001100110000000 //lw reg9 = memo[ value in reg8 + immediate 9] 
// the index which is [immediate+rs] for memo in lw should be more than the num of instructions you entered.
00000000000000000000110010001001 //add reg12 = value in reg8 + value in reg9
00100000000000000000011111011110 //or reg7 = value in reg13 + value in reg14
01001000000000001000000010001001 //sw memo[value in reg8 + immediate 8] = value in reg9 
// the index which is [immediate+rs] for memo in sw should be more than the num of instructions you entered.
01010000000000000010000011001100 //beq if(value in reg12 == value in reg12) nextPC = nextPC+ immediate 2.

00011000000000000101100000000000
01000000000000001001100110000000
00000000000000000000110010001001
00100000000000000000011111011110
01001000000000001000000010001001
01010000000000000010000011001100
------------------------------------------


01000000000000000000000000010001
01010000000000000010000011001100..beq
00010000000000000101100000000000..mult
00001000000000000000110010101011  sub
00100000000000000000011111011110  and immed
00000000000000000000110010101011..add

01101000000000000000000000110000
00010000000000000101100000000000
00001000000000000000110010101011
00100000000000000000011111011110
00000000000000000000110010101011

01010000000000000011000000010001
00000000000000000000000100000010
00000000000000000000000100000010
00000000000000000000000100000010
00001000000000000000001000100001

The following is a copy of the first 14 instructions in this file.
00010000000000000101100000000000
01000000000000000000000010001001
00001000000000000000110010101011
00100000000000000000011111011110
01001000000000000000000010001001
00101000000000000000011111010000
00000000000000000000110010101011
00011000000000000101100000000000
00110000000000000101100000000000
00111000000000000101100000000000
01100000000000000101100000000000
01010000000000000010000011001100
01011000000011111111000011000000
01101000000000000000000000100000


















-1